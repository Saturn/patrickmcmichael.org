{"data":{"site":{"siteMetadata":{"title":"patrickmcmichael.org","author":"Patrick McMichael"}},"markdownRemark":{"id":"a425cf09-3302-57a1-924a-488df3835843","excerpt":"If you are building a Flask application that includes user authentication you may have considered adding the ability for users to authenticate using a third…","html":"<p>If you are building a Flask application that includes user authentication you may have considered adding the ability for users to authenticate using a third party account such as Google, Facebook or Twitter.</p>\n<p>Before I get to the Flask app with OAuth2 authentication I want to quickly go over some OAuth 2 basics. If you wish to skip ahead to the example Flask app click <a href=\"#flask\">here</a>.</p>\n<h3>OAuth 2 and OpenID Connect</h3>\n<p>(OAuth 2)[https://oauth.net/2/] is a specification or standard which can enable applications to obtain (limited) access to data on another service such as Google, Facebook or Spotify for example. Applications may request access to different levels of data ranging from basic account information all the way to wanting to access your emails (<a href=\"https://developers.google.com/gmail/api/guides/\">Gmail API</a>). (OpenID Connect)[https://openid.net/connect/] is </p>\n<h4>Authentication vs Authorization</h4>\n<p>asdasdas</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for\n<span class=\"token keyword\">from</span> flask_sqlalchemy <span class=\"token keyword\">import</span> SQLAlchemy\n<span class=\"token keyword\">from</span> flask_login <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>LoginManager<span class=\"token punctuation\">,</span> UserMixin<span class=\"token punctuation\">,</span>\n                         current_user<span class=\"token punctuation\">,</span> login_user<span class=\"token punctuation\">,</span> logout_user<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>consumer <span class=\"token keyword\">import</span> oauth_authorized\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>google <span class=\"token keyword\">import</span> make_google_blueprint<span class=\"token punctuation\">,</span> google\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>backend<span class=\"token punctuation\">.</span>sqla <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>OAuthConsumerMixin<span class=\"token punctuation\">,</span>\n                                               SQLAlchemyBackend<span class=\"token punctuation\">)</span>\n\n\npath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndb_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'app.db'</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sqlite:///'</span> <span class=\"token operator\">+</span> db_path\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_TRACK_MODIFICATIONS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'aS3CR3Tk3y'</span>\n\ndb <span class=\"token operator\">=</span> SQLAlchemy<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager <span class=\"token operator\">=</span> LoginManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>init_app<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>login_view <span class=\"token operator\">=</span> <span class=\"token string\">'google.login'</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">,</span> UserMixin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OAuth</span><span class=\"token punctuation\">(</span>OAuthConsumerMixin<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    provider_user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'user.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    user <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>relationship<span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n\n\n@login_manager<span class=\"token punctuation\">.</span>user_loader\n<span class=\"token keyword\">def</span> <span class=\"token function\">load_user</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\ngoogle_blueprint <span class=\"token operator\">=</span> make_google_blueprint<span class=\"token punctuation\">(</span>\n    client_id<span class=\"token operator\">=</span><span class=\"token string\">'603326531573-2nq3m6o3u1g6ogcf1qnh2j3523ucr5mf.apps.googleusercontent.com'</span><span class=\"token punctuation\">,</span>\n    client_secret<span class=\"token operator\">=</span><span class=\"token string\">'4IteqSIh-gA87knTCtNLhif0'</span><span class=\"token punctuation\">,</span>\n    scope<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'https://www.googleapis.com/auth/userinfo.email'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'https://www.googleapis.com/auth/userinfo.profile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    offline<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    reprompt_consent<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    backend<span class=\"token operator\">=</span>SQLAlchemyBackend<span class=\"token punctuation\">(</span>OAuth<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span>current_user<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span>register_blueprint<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    google_data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">if</span> current_user<span class=\"token punctuation\">.</span>is_authenticated <span class=\"token operator\">and</span> google<span class=\"token punctuation\">.</span>authorized<span class=\"token punctuation\">:</span>\n        google_data <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'/oauth2/v2/userinfo'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.j2'</span><span class=\"token punctuation\">,</span> google_data<span class=\"token operator\">=</span>google_data<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/logout'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logout_user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n@oauth_authorized<span class=\"token punctuation\">.</span>connect_via<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">google_logged_in</span><span class=\"token punctuation\">(</span>blueprint<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> blueprint<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'/oauth2/v2/userinfo'</span><span class=\"token punctuation\">)</span>\n    user_info <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>filter_by<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                                  provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">:</span>\n        oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                      provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">,</span>\n                      token<span class=\"token operator\">=</span>token<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        oauth<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token\n        <span class=\"token comment\"># db.session.add(oauth)</span>\n        <span class=\"token comment\"># db.session.commit()</span>\n        login_user<span class=\"token punctuation\">(</span>oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">:</span>\n        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span>email<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        oauth<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> user\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> oauth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        login_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p><img src=\"https://images.pexels.com/photos/814499/pexels-photo-814499.jpeg?auto=compress&#x26;cs=tinysrgb&#x26;dpr=2&#x26;h=750&#x26;w=1260\" alt=\"alt text\" title=\"Logo Title Text 1\"></p>\n<div>\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe src=\"https://www.youtube.com/embed/rty2MQZ_eMg\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe>\n\n          </div>\n          </div>\n<h2><a name=\"flask\"></a>The Flask App</h2>\n<h1>GitHub Markdown Kitchen Sink</h1>\n<p>A large collection of code samples which have been tested against GitHub’s markdown parser… so you don’t have to.</p>\n<h4>Resources</h4>\n<h5>This Repo</h5>\n<ul>\n<li>README.md (<a href=\"https://github.com/adamschwartz/github-markdown-kitchen-sink/blob/master/README.md\">preview</a>, <a href=\"https://raw.github.com/adamschwartz/github-markdown-kitchen-sink/master/README.md\">raw</a>) – this file</li>\n<li>TEST.md (<a href=\"https://github.com/adamschwartz/github-markdown-kitchen-sink/blob/master/TEST.md\">preview</a>, <a href=\"https://raw.github.com/adamschwartz/github-markdown-kitchen-sink/master/TEST.md\">raw</a>) — used to test the examples from this file, which are pre-generated</li>\n</ul>\n<h5>Markdown</h5>\n<ul>\n<li><a href=\"http://daringfireball.net/projects/markdown/syntax\">Original Markdown Syntax</a> from John Gruber</li>\n<li><a href=\"https://help.github.com/articles/github-flavored-markdown\">GitHub-Flavored Markdown</a> from GitHub</li>\n</ul>\n<h2>Code Examples with Preview</h2>\n<h3>Block Elements</h3>\n<table>\n  <tr><td>Code</td><td>Preview</td></tr>\n  <!--- Paragraphs -->\n  <tr>\n    <td colspan=\"2\">Paragraph</td>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>This is a paragraph.</code></pre>\n    </td>\n    <td>This is a paragraph.</td>\n  </tr>\n  <!--- Headers -->\n  <tr>\n    <td colspan=\"2\">Headers (Sextext-style)</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code>Header 1\n========\n<p>Header 2\n--------</code></pre>\n</td>\n<td>\n<h1>Header 1</h1>\n<h2>Header 2</h2>\n</td></p>\n  </tr>\n  <tr>\n    <td colspan=\"2\">Headers (Atx-style)</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code># Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6</code></pre>\n    </td>\n    <td>\n      <h1>Header 1</h1>\n      <h2>Header 2</h2>\n      <h3>Header 3</h3>\n      <h4>Header 4</h4>\n      <h5>Header 5</h5>\n      <h6>Header 6</h6>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">Headers (Atx-style closed)</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code># Header 1 #\n## Header 2 ##\n### Header 3 ###\n#### Header 4 ####\n##### Header 5 #####\n###### Header 6 #####</code></pre>\n    </td>\n    <td>\n      <h1>Header 1</h1>\n      <h2>Header 2</h2>\n      <h3>Header 3</h3>\n      <h4>Header 4</h4>\n      <h5>Header 5</h5>\n      <h6>Header 6</h6>\n    </td>\n  </tr>\n  <!--- Blockquotes -->\n  <tr>\n    <td colspan=\"2\">Blockquote</td>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>> Lorem ipsum dolor sit amet [...]</code></pre>\n    </td>\n    <td>\n      <blockquote>\n        Lorem ipsum dolor sit amet, consectetuer adipiscing elit.\n        Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,\n        viverra nec, fringilla in, laoreet vitae, risus.\n      </blockquote>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">Blockquote with nested elements</td>\n  </tr>\n  <tr>\n    <td>\n      <!--- Code exmaple -->\n      <pre><code>> ## This is a header.\n> 1. This is the first list item.\n> 2. This is the second list item.\n>\n> Here's some example code:\n>\n>     Markdown.generate();</code></pre>\n      <!--- End code exmaple -->\n    </td>\n    <td>\n      <blockquote>\n        <h2>This is a header.</h2>\n          <ol>\n            <li>This is the first list item.</li>\n            <li>This is the second list item.</li>\n          </ol>\n          <p>Here's some example code:</p>\n          <pre><code>Markdown.generate();</code></pre>\n      </blockquote>\n    </td>\n  </tr>\n  <!--- Lists -->\n  <tr>\n    <td colspan=\"2\">List</td>\n  </tr>\n  <tr>\n    <td>\n<table><tr><td>\n<pre><code>- Red\n- Green\n- Blue</code></pre>\n</td><td>\n<pre><code>+ Red\n+ Green\n+ Blue</code></pre>\n</td><td>\n<pre><code>* Red\n* Green\n* Blue</code></pre>\n</td></tr></table>\n    </td>\n    <td>\n      <ul>\n        <li>Red</li>\n        <li>Green</li>\n        <li>Blue</li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td colspan=\"2\">Ordered List</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code>1. Buy flour and salt\n1. Mix together with water\n1. Bake</code></pre>\n    </td>\n    <td>\n      <ol>\n        <li>Buy flour and salt</li>\n        <li>Mix together with water</li>\n        <li>Bake</li>\n      </ol>\n    </td>\n  </tr>\n  <!-- Code blocks -->\n  <tr>\n    <td colspan=\"2\">Code Block</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code>Normal paragraph.\n    Code</code></pre>\n    </td>\n    <td>\n      <p>Normal paragraph.</p>\n      <pre><code>Code</code></pre>\n    </td>\n  </tr>\n  <!-- Horizontal rules -->\n  <tr>\n    <td colspan=\"2\">Horizontal Rules</td>\n  </tr>\n  <tr>\n    <td>\n<pre><code>* * *\n<hr>\n<hr>\n<hr>\n<p>---------------------------------------</code></pre>\n</td>\n<td>\n<hr/>\n<hr/>\n<hr/>\n<hr/>\n<hr/>\n</td></p>\n  </tr>\n</table>\n<h3>Inline Elements</h3>\n<table>\n  <tr><td>Code</td><td>Preview</td></tr>\n  <!--- Links -->\n  <tr>\n    <td colspan=\"2\">Links</td>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>This is [an example](http://example.com \"Example\") link.\n<p><a href=\"http://example.com\">This link</a> has no title attr.</p>\n<p>This is [an example][id] reference-style link.</p>\n<p>[id]: <a href=\"http://example.com\">http://example.com</a> “Optional Title”</code></pre>\n</td>\n<td>\n<p>This is <a href=\"http://example.com\" title=\"Example\">an example</a> link.</p>\n<p><a href=\"http://example.com\">This link</a> has no title attr.</p>\n<p>This is <a href=\"http://example.com\" title=\"Optinal Title\">an example</a> reference-style link.</p>\n</td></p>\n  </tr>\n  <!--- Emphasis -->\n  <tr>\n    <td colspan=\"2\">Emphasis</td>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>*single asterisks*\n<p><em>single underscores</em></p>\n<p><strong>double asterisks</strong></p>\n<p><strong>double underscores</strong></td>\n<td>\n<p><em>single asterisks</em></p>\n<p><em>single underscores</em></p>\n<p><strong>double asterisks</strong></p>\n<p><strong>double underscores</strong></p>\n</td></p>\n  </tr>\n  <!--- Code -->\n  <tr>\n    <td colspan=\"2\">Code</td>\n  </tr>\n  <tr>\n    <td>\n      <pre><code>This paragraph has some `code` in it.</td>\n    <td>\n      <p>This paragraph has some <code>code</code> in it.</p>\n    </td>\n  </tr>\n  <!--- Images -->\n\n    Image\n  \n  \n    \n      <pre><code>![Alt Text](http://placehold.it/200x50 &quot;Image Title&quot;)\n    \n      <p><img src=\"http://placehold.it/200x50\" title=\"Image Title\" alt=\"Alt Text\"></p>\n    \n  \n</code></pre>","frontmatter":{"title":"Signing in with a Google Account with your Flask application","date":"January 19, 2019"}}},"pageContext":{"slug":"/flask-google-login/","previous":{"fields":{"slug":"/hello/"},"frontmatter":{"title":"Hello"}},"next":null}}