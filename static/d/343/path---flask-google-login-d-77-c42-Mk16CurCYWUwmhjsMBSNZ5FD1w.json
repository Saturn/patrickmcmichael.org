{"data":{"site":{"siteMetadata":{"title":"patrickmcmichael.org","author":"Patrick McMichael"}},"markdownRemark":{"id":"a425cf09-3302-57a1-924a-488df3835843","excerpt":"If you are building a Flask application that includes user authentication you may have considered adding the ability for users to authenticate using a third…","html":"<p>If you are building a Flask application that includes user authentication you may have considered adding the ability for users to authenticate using a third party account such as Google, Facebook or Twitter. I will show an example Flask application which uses Google as an authentication provider. However, it will be very straightforward to add support for other providers too.</p>\n<p>Before I get to the Flask app I want to quickly go over some OAuth 2 basics. If you wish to skip ahead to the example Flask app click <a href=\"#the-example-application\">here</a>.</p>\n<h3 id=\"oauth-2-and-openid-connect\"><a href=\"#oauth-2-and-openid-connect\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OAuth 2 and OpenID Connect</h3>\n<p><a href=\"https://oauth.net/2/\">OAuth 2</a> is a specification or standard which can enable applications to obtain (limited) access to data on another service such as Google, Facebook or Spotify for example. Services may authorize access to different levels of data ranging from basic account information all the way to wanting access to your emails (<a href=\"https://developers.google.com/gmail/api/guides/\">Gmail API</a>). Specifically, OAuth 2 is an authorization framework. It does not specify exactly how services should handle authentication.</p>\n<p><a href=\"https://openid.net/connect/\">OpenID Connect</a> is an identity layer built on top of OAuth 2. OpenID Connect is helpful because it defines some extra steps to the OAuth 2 flow which make federated authentication possible. One of the main steps is the returning of an <code class=\"language-text\">id_token</code> from the authorization server. This token is usually a JSON Web Token (<a href=\"https://jwt.io/\">JWT</a>) which serializes various data such as <code class=\"language-text\">iss</code> (issuer) and <code class=\"language-text\">iat</code> (issued at). They can include additional data. For example, Google’s id_tokens do include email addresses (assuming ‘email’ is part of the scope you specified when initiating the request).</p>\n<p>For our example application we will be using <a href=\"https://developers.google.com/identity/protocols/OpenIDConnect\">Google</a> as an authentication provider. Their implementation conforms to OpenID connect.</p>\n<h3 id=\"the-example-application\"><a href=\"#the-example-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Example Application</h3>\n<h4 id=\"getting-the-credentials\"><a href=\"#getting-the-credentials\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting the credentials</h4>\n<ol>\n<li>\n<p>To be able to use Google as an authentication provider for our application we need to register an application in the <a href=\"https://console.developers.google.com/apis/credentials\">Google developer console</a>. Create a new ‘project’ for this.</p>\n</li>\n<li>\n<p>Select <em>Create credentials</em> and then <em>OAuth client id</em>. Choose <em>Web application</em> for <em>Application type</em>.</p>\n</li>\n<li>\n<p>Choose a <em>name</em> for the application and add <em><a href=\"http://localhost:5000/google/authorized\">http://localhost:5000/google/authorized</a></em> to the <em>Authorised redirect URIs</em> section. Click save and make a note of the Client Secret and Client ID displayed.</p>\n</li>\n</ol>\n<h4 id=\"install-dependencies\"><a href=\"#install-dependencies\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install dependencies</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ pip install flask flask-dance[sqla] flask-sqlalchemy blinker</code></pre></div>\n<h4 id=\"the-code\"><a href=\"#the-code\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Code</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n\n<span class=\"token keyword\">from</span> flask <span class=\"token keyword\">import</span> Flask<span class=\"token punctuation\">,</span> render_template<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> url_for\n<span class=\"token keyword\">from</span> flask_sqlalchemy <span class=\"token keyword\">import</span> SQLAlchemy\n<span class=\"token keyword\">from</span> flask_login <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>LoginManager<span class=\"token punctuation\">,</span> UserMixin<span class=\"token punctuation\">,</span>\n                         current_user<span class=\"token punctuation\">,</span> login_user<span class=\"token punctuation\">,</span> logout_user<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>consumer <span class=\"token keyword\">import</span> oauth_authorized\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>contrib<span class=\"token punctuation\">.</span>google <span class=\"token keyword\">import</span> make_google_blueprint<span class=\"token punctuation\">,</span> google\n<span class=\"token keyword\">from</span> flask_dance<span class=\"token punctuation\">.</span>consumer<span class=\"token punctuation\">.</span>backend<span class=\"token punctuation\">.</span>sqla <span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>OAuthConsumerMixin<span class=\"token punctuation\">,</span>\n                                               SQLAlchemyBackend<span class=\"token punctuation\">)</span>\n\n\nos<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'OAUTHLIB_INSECURE_TRANSPORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>\n\npath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndb_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'app.db'</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sqlite:///'</span> <span class=\"token operator\">+</span> db_path\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_TRACK_MODIFICATIONS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'YOUR-SECRET-KEY-HERE'</span>\n\ndb <span class=\"token operator\">=</span> SQLAlchemy<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager <span class=\"token operator\">=</span> LoginManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>init_app<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>login_view <span class=\"token operator\">=</span> <span class=\"token string\">'google.login'</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">,</span> UserMixin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OAuth</span><span class=\"token punctuation\">(</span>OAuthConsumerMixin<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    provider_user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'user.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    user <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>relationship<span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n\n\n@login_manager<span class=\"token punctuation\">.</span>user_loader\n<span class=\"token keyword\">def</span> <span class=\"token function\">load_user</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\ngoogle_blueprint <span class=\"token operator\">=</span> make_google_blueprint<span class=\"token punctuation\">(</span>\n    client_id<span class=\"token operator\">=</span><span class=\"token string\">'YOUR-CLIENT-ID-HERE'</span><span class=\"token punctuation\">,</span>\n    client_secret<span class=\"token operator\">=</span><span class=\"token string\">'YOUR-CLIENT-SECRET-HERE'</span><span class=\"token punctuation\">,</span>\n    scope<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'https://www.googleapis.com/auth/userinfo.email'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'https://www.googleapis.com/auth/userinfo.profile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    offline<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    reprompt_consent<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    backend<span class=\"token operator\">=</span>SQLAlchemyBackend<span class=\"token punctuation\">(</span>OAuth<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span>current_user<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span>register_blueprint<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    google_data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    user_info_endpoint <span class=\"token operator\">=</span> <span class=\"token string\">'/oauth2/v2/userinfo'</span>\n    <span class=\"token keyword\">if</span> current_user<span class=\"token punctuation\">.</span>is_authenticated <span class=\"token operator\">and</span> google<span class=\"token punctuation\">.</span>authorized<span class=\"token punctuation\">:</span>\n        google_data <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>user_info_endpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.j2'</span><span class=\"token punctuation\">,</span>\n                           google_data<span class=\"token operator\">=</span>google_data<span class=\"token punctuation\">,</span>\n                           fetch_url<span class=\"token operator\">=</span>google<span class=\"token punctuation\">.</span>base_url <span class=\"token operator\">+</span> user_info_endpoint<span class=\"token punctuation\">)</span>\n\n\n@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/logout'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">logout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    logout_user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> redirect<span class=\"token punctuation\">(</span>url_for<span class=\"token punctuation\">(</span><span class=\"token string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n@oauth_authorized<span class=\"token punctuation\">.</span>connect_via<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">google_logged_in</span><span class=\"token punctuation\">(</span>blueprint<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> blueprint<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'/oauth2/v2/userinfo'</span><span class=\"token punctuation\">)</span>\n    user_info <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>filter_by<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                                  provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">:</span>\n        oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                      provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">,</span>\n                      token<span class=\"token operator\">=</span>token<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        oauth<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>oauth<span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        login_user<span class=\"token punctuation\">(</span>oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">:</span>\n        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span>email<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        oauth<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> user\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> oauth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        login_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<h4 id=\"the-template\"><a href=\"#the-template\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Template</h4>\n<div class=\"gatsby-highlight\" data-language=\"django\"><pre class=\"language-django\"><code class=\"language-django\"><span class=\"token doctype\">&lt;!doctype html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>no-js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Google Login with Flask<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n  <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> sans-serif<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.info</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> solid gold 3px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> beige<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> monospace<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.info p</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span>  0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.info p:first-child</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 15px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 10px<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>Hello world! This is a Flask application.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token property\">{% <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> <span class=\"token variable\">current_user</span><span class=\"token punctuation\">.</span><span class=\"token variable\">is_authenticated</span> %}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Click <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/google<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> to login with a Google Account.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token property\">{% <span class=\"token keyword\">else</span> %}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hi, <span class=\"token property\">{{ <span class=\"token variable\">current_user</span><span class=\"token punctuation\">.</span><span class=\"token variable\">name</span> }}</span> [<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token property\">{{ <span class=\"token variable\">current_user</span><span class=\"token punctuation\">.</span><span class=\"token variable\">email</span> }}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>]. You have logged in using a Google Account.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token property\">{% <span class=\"token keyword\">if</span> <span class=\"token variable\">google_data</span> <span class=\"token keyword\">is</span> <span class=\"token operator\">not</span> <span class=\"token keyword\">none</span> %}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>User info fetched from <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token property\">{{ <span class=\"token variable\">fetch_url</span> }}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token property\">{% <span class=\"token keyword\">for</span> <span class=\"token variable\">key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">value</span> <span class=\"token keyword\">in</span> <span class=\"token variable\">google_data</span><span class=\"token punctuation\">.</span><span class=\"token variable\">items</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> %}</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span><span class=\"token property\">{{ <span class=\"token variable\">key</span> }}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span>: <span class=\"token property\">{{ <span class=\"token variable\">value</span> }}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token property\">{% <span class=\"token keyword\">endfor</span> %}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token property\">{% <span class=\"token keyword\">endif</span> %}</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Click <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/logout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>here<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span> to log out<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token property\">{% <span class=\"token keyword\">endif</span> %}</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h4 id=\"code-walkthrough\"><a href=\"#code-walkthrough\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code Walkthrough</h4>\n<p>I will walkthrough the code in chunks.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">os<span class=\"token punctuation\">.</span>environ<span class=\"token punctuation\">[</span><span class=\"token string\">'OAUTHLIB_INSECURE_TRANSPORT'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>\n\npath <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>realpath<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndb_path <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token string\">'app.db'</span><span class=\"token punctuation\">)</span>\n\napp <span class=\"token operator\">=</span> Flask<span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_DATABASE_URI'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'sqlite:///'</span> <span class=\"token operator\">+</span> db_path\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SQLALCHEMY_TRACK_MODIFICATIONS'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\napp<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">[</span><span class=\"token string\">'SECRET_KEY'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'aS3CR3Tk3y'</span>\n\ndb <span class=\"token operator\">=</span> SQLAlchemy<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager <span class=\"token operator\">=</span> LoginManager<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>init_app<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span>\nlogin_manager<span class=\"token punctuation\">.</span>login_view <span class=\"token operator\">=</span> <span class=\"token string\">'google.login'</span></code></pre></div>\n<p>Setting the <code class=\"language-text\">OAUTHLIB_INSECURE_TRANSPORT</code> environment variable allows the OAuth library to work even when using HTTP. Obviously this should not be used in production.</p>\n<p>The rest is basic setup including the path to the sqlite database file. We will be using <em>flask-login</em> to handle the session based logins. Setting the <em>login_view</em> here doesn’t do much but if you wanted to protect certain views, you can have your app automatically redirect the user to the appropriate login page.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">,</span> UserMixin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> primary_key<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    email <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    name <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OAuth</span><span class=\"token punctuation\">(</span>OAuthConsumerMixin<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>Model<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    provider_user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> unique<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>Column<span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">.</span>Integer<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>ForeignKey<span class=\"token punctuation\">(</span><span class=\"token string\">'user.id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    user <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span>relationship<span class=\"token punctuation\">(</span>User<span class=\"token punctuation\">)</span>\n\n\n@login_manager<span class=\"token punctuation\">.</span>user_loader\n<span class=\"token keyword\">def</span> <span class=\"token function\">load_user</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> User<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You could use a single User model and just include the necessary OAuth columns but that would mean you would potentially only be able to support a single authentication provider. Using a separate model for the OAuth data could also allow you to allow a single User account to have multiple ways of authenticating.</p>\n<p>The <em>UserMixin</em> adds some methods required by <em>flask-login</em>. The <em>OAuthConsumerMixin</em> adds id, provider, created_at and token columns. I have included the <em>provider_user_id</em> column which will be the users unique identifier.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">google_blueprint <span class=\"token operator\">=</span> make_google_blueprint<span class=\"token punctuation\">(</span>\n    client_id<span class=\"token operator\">=</span><span class=\"token string\">'603326531573-02nvp9or01tt0se8rdvdr3noddcla1er.apps.googleusercontent.com'</span><span class=\"token punctuation\">,</span>\n    client_secret<span class=\"token operator\">=</span><span class=\"token string\">'aegtkh0aHIM1rOjoKizPyAPX'</span><span class=\"token punctuation\">,</span>\n    scope<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'https://www.googleapis.com/auth/userinfo.email'</span><span class=\"token punctuation\">,</span>\n           <span class=\"token string\">'https://www.googleapis.com/auth/userinfo.profile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    offline<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    reprompt_consent<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    backend<span class=\"token operator\">=</span>SQLAlchemyBackend<span class=\"token punctuation\">(</span>OAuth<span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">,</span> user<span class=\"token operator\">=</span>current_user<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span>register_blueprint<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Here we are using Flask-Dance’s blueprint factory which we register to our app. Setting offline to true means we don’t have to worry about the token expiring. The default backend uses the Flask session object to store OAuth tokens. Here we are using the SQLAlchemy backend.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">@app<span class=\"token punctuation\">.</span>route<span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    google_data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    user_info_endpoint <span class=\"token operator\">=</span> <span class=\"token string\">'/oauth2/v2/userinfo'</span>\n    <span class=\"token keyword\">if</span> current_user<span class=\"token punctuation\">.</span>is_authenticated <span class=\"token operator\">and</span> google<span class=\"token punctuation\">.</span>authorized<span class=\"token punctuation\">:</span>\n        google_data <span class=\"token operator\">=</span> google<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>user_info_endpoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> render_template<span class=\"token punctuation\">(</span><span class=\"token string\">'index.j2'</span><span class=\"token punctuation\">,</span>\n                           google_data<span class=\"token operator\">=</span>google_data<span class=\"token punctuation\">,</span>\n                           fetch_url<span class=\"token operator\">=</span>google<span class=\"token punctuation\">.</span>base_url <span class=\"token operator\">+</span> user_info_endpoint<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The homepage of our application will simply display a link to login if the user has not done so already. When they are logged in, we fetch some user data (to prove we can) from the userinfo endpoint. We then display this to the user.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">@oauth_authorized<span class=\"token punctuation\">.</span>connect_via<span class=\"token punctuation\">(</span>google_blueprint<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">google_logged_in</span><span class=\"token punctuation\">(</span>blueprint<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    resp <span class=\"token operator\">=</span> blueprint<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'/oauth2/v2/userinfo'</span><span class=\"token punctuation\">)</span>\n    user_info <span class=\"token operator\">=</span> resp<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    user_id <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>filter_by<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                                  provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">:</span>\n        oauth <span class=\"token operator\">=</span> OAuth<span class=\"token punctuation\">(</span>provider<span class=\"token operator\">=</span>blueprint<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n                      provider_user_id<span class=\"token operator\">=</span>user_id<span class=\"token punctuation\">,</span>\n                      token<span class=\"token operator\">=</span>token<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        oauth<span class=\"token punctuation\">.</span>token <span class=\"token operator\">=</span> token\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>oauth<span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        login_user<span class=\"token punctuation\">(</span>oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">not</span> oauth<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">:</span>\n        user <span class=\"token operator\">=</span> User<span class=\"token punctuation\">(</span>email<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"email\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                    name<span class=\"token operator\">=</span>user_info<span class=\"token punctuation\">[</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        oauth<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> user\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>add_all<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">,</span> oauth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        login_user<span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<p>We are using the @oauth_authorized signal which allows us to perform some actions when the token has been succesfully retrieved from the authorization server. Specifically, we are trying to load the OAuth object if it exists. If it does not exist, we create a new one and pair it with a new User too. We return False to prevent the default behaviour of Flask-Dance which will be to set the token on the backend (but we have done that ourselves).</p>\n<h3 id=\"useful-resources-and-further-reading\"><a href=\"#useful-resources-and-further-reading\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Useful Resources and Further Reading</h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/singingwolfboy/flask-dance\">Flask-Dance</a></p>\n</li>\n<li>\n<p><a href=\"https://www.digitalocean.com/community/tutorials/an-introduction-to-oauth-2\">An Introduction to OAuth 2 (Digital Ocean)</a></p>\n</li>\n<li>\n<p><a href=\"\">Flask-Dance</a></p>\n</li>\n</ul>","frontmatter":{"title":"Adding Google Authentication to your Flask Application","date":"January 19, 2019"}}},"pageContext":{"slug":"/flask-google-login/"}}