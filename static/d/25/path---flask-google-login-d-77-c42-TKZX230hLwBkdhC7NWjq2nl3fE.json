{"data":{"site":{"siteMetadata":{"title":"patrickmcmichael.org","author":"Patrick McMichael"}},"markdownRemark":{"id":"a425cf09-3302-57a1-924a-488df3835843","excerpt":"Hello.","html":"<p>Hello.</p>\n<div class=\"gatsby-highlight\" data-language=\"python3\"><pre class=\"language-python3\"><code class=\"language-python3\">import os\n\nfrom flask import Flask, render_template, redirect, url_for\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_login import (LoginManager, UserMixin,\n                         current_user, login_user, logout_user)\nfrom flask_dance.consumer import oauth_authorized\nfrom flask_dance.contrib.google import make_google_blueprint, google\nfrom flask_dance.consumer.backend.sqla import (OAuthConsumerMixin,\n                                               SQLAlchemyBackend)\n\n\npath = os.path.dirname(os.path.realpath(__file__))\ndb_path = os.path.join(path, &#39;app.db&#39;)\n\napp = Flask(__name__)\napp.config[&#39;SQLALCHEMY_DATABASE_URI&#39;] = &#39;sqlite:///&#39; + db_path\napp.config[&#39;SQLALCHEMY_TRACK_MODIFICATIONS&#39;] = False\napp.config[&#39;SECRET_KEY&#39;] = &#39;aS3CR3Tk3y&#39;\n\ndb = SQLAlchemy(app)\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = &#39;google.login&#39;\n\n\nclass User(db.Model, UserMixin):\n    id = db.Column(db.Integer, primary_key=True)\n    email = db.Column(db.String(256), unique=True)\n    name = db.Column(db.String(256))\n\n\nclass OAuth(OAuthConsumerMixin, db.Model):\n    provider_user_id = db.Column(db.String(256), unique=True)\n    user_id = db.Column(db.Integer, db.ForeignKey(&#39;user.id&#39;))\n    user = db.relationship(User)\n\n\n@login_manager.user_loader\ndef load_user(user_id):\n    return User.query.get(int(user_id))\n\n\ngoogle_blueprint = make_google_blueprint(\n    client_id=&#39;603326531573-2nq3m6o3u1g6ogcf1qnh2j3523ucr5mf.apps.googleusercontent.com&#39;,\n    client_secret=&#39;4IteqSIh-gA87knTCtNLhif0&#39;,\n    scope=[&#39;https://www.googleapis.com/auth/userinfo.email&#39;,\n           &#39;https://www.googleapis.com/auth/userinfo.profile&#39;],\n    offline=True,\n    reprompt_consent=True,\n    backend=SQLAlchemyBackend(OAuth, db.session, user=current_user)\n)\n\napp.register_blueprint(google_blueprint)\n\n\n@app.route(&#39;/&#39;)\ndef index():\n    google_data = None\n    if current_user.is_authenticated and google.authorized:\n        google_data = google.get(&#39;/oauth2/v2/userinfo&#39;).json()\n    return render_template(&#39;index.j2&#39;, google_data=google_data)\n\n\n@app.route(&#39;/logout&#39;)\ndef logout():\n    logout_user()\n    return redirect(url_for(&#39;index&#39;))\n\n\n@oauth_authorized.connect_via(google_blueprint)\ndef google_logged_in(blueprint, token):\n    resp = blueprint.session.get(&#39;/oauth2/v2/userinfo&#39;)\n    user_info = resp.json()\n    user_id = str(user_info[&#39;id&#39;])\n    oauth = OAuth.query.filter_by(provider=blueprint.name,\n                                  provider_user_id=user_id).first()\n    if not oauth:\n        oauth = OAuth(provider=blueprint.name,\n                      provider_user_id=user_id,\n                      token=token)\n    else:\n        oauth.token = token\n        # db.session.add(oauth)\n        # db.session.commit()\n        login_user(oauth.user)\n    if not oauth.user:\n        user = User(email=user_info[&quot;email&quot;],\n                    name=user_info[&quot;name&quot;])\n        oauth.user = user\n        db.session.add_all([user, oauth])\n        db.session.commit()\n        login_user(user)\n\n    return False</code></pre></div>","frontmatter":{"title":"Signing in with a Google Account in your Flask application","date":"January 19, 2019"}}},"pageContext":{"slug":"/flask-google-login/","previous":{"fields":{"slug":"/hello/"},"frontmatter":{"title":"Hello"}},"next":null}}